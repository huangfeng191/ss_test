
#user  nobody;
worker_processes  1;

# error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;


#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

	 log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"'
					 '$request_time $upstream_response_time';
						

    access_log  logs/access.log main;
    error_log  logs/error.log ;

    # sendfile        on;
    sendfile        off;
    #tcp_nopush     on;

    # keepalive_timeout  0;
    # keepalive_timeout  265;

    #gzip  on;

    # keepalive_requests 8192;
    # keepalive_timeout 180s 180s;




upstream main {
#   server 192.168.1.65:8000;
#   server 192.168.1.160;
  server 192.168.1.168;
    # server 192.168.1.10;
#   server 192.168.1.171:8080;
#   server 127.0.0.1:8080;
    # server 172.16.40.90;
#   server 192.168.5.102:8080;
#    server 192.168.20.200:8080;
	#  server 192.168.100.188:7006;
	#  server 192.168.20.10:16080;
}
upstream socket_server {
	server 192.168.1.160:8081;
}



server {
	

	# listen  443 ssl;
	# ssl_certificate       D:/data/other/sgaps.crt;
	# ssl_certificate_key   /etc/v2ray/v2ray.key;
	# ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
	# ssl_ciphers           HIGH:!aNULL:!MD5;

	listen 61;
	server_name localhost;
	
	root   E:/c_project/nms_be/src/main/webapp/;

# 需要拼上连接
	location ^~/nms/li/{
		rewrite '^/nms/li/(.*)$' /code/li/$1;
	}

	location ^~/nms/js/{
		rewrite '^/nms/js/(.*)$' /code/js/$1;
	}

	# location ^~/nms/audio/{
	# 	rewrite '^/nms/(.*)$' /$1;
	
	# }





	location ~* \.(html|js|css|gif|jpg|png|mp3|xls|exe|pdf|idl) {          
		# return 200 " OK";
		# deny all;
		# deny all;
		rewrite '^/nms/(.*)$' /$1;
		add_header Cache-Control no-store;
		
	}

	
	# socket 代理配置
	location /socket {
		proxy_redirect off;
        proxy_pass http://socket_server; #假设WebSocket监听在环回地址的10000端口上
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $http_host;

	}
	

	location / {
		# proxy_pass https://main;
		proxy_pass http://main;
		proxy_pass_header Server;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		# proxy_temp_file_write_size  64k; 
		proxy_read_timeout 300;  # 秒
		proxy_max_temp_file_size 0;
		client_max_body_size    1000m;
		proxy_http_version 1.1; # 配置长连接
	}




}


}
